<?xml version="1.0" encoding="UTF-8"?>
<itop_design xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  version="1.0">
  <constants>
  </constants>
  <classes>
    <class id="ActionWebhookNotification" _delta="define">
      <parent>cmdbAbstractObject</parent>
      <php_parent>
        <name>_ActionWebhookNotification</name>
      </php_parent>
      <properties>
        <comment></comment>
        <category>grant_by_profile,core/cmdb,application</category>
        <abstract>true</abstract>
        <key_type>autoincrement</key_type>
        <db_table>priv_webhook_notify</db_table>
        <db_key_field>id</db_key_field>
        <naming>
          <attributes>
            <attribute id="name"/>
          </attributes>
        </naming>
        <display_template/>
        <icon/>
        <reconciliation>
          <attributes>
            <attribute id="name"/>
          </attributes>
        </reconciliation>
      </properties>
      <fields>
        <field id="channel" xsi:type="AttributeString">
          <sql>channel</sql>
          <default_value/>
          <is_null_allowed>true</is_null_allowed>
        </field>
        <field id="bot_alias" xsi:type="AttributeString">
          <sql>bot_alias</sql>
          <default_value/>
          <is_null_allowed>true</is_null_allowed>
        </field>
        <field id="text" xsi:type="AttributeTemplateHTML">
          <sql>text</sql>
          <default_value/>
          <is_null_allowed>true</is_null_allowed>
        </field>
        <field id="attachment" xsi:type="AttributeEnum">
          <values>
            <value id="yes">yes</value>
            <value id="no">no</value>
          </values>
          <sql>attachment</sql>
          <default_value>no</default_value>
          <is_null_allowed>false</is_null_allowed>
          <display_style>radio_horizontal</display_style>
        </field>
        <field id="att_fallback" xsi:type="AttributeTemplateHTML">
          <sql>att_fallback</sql>
          <default_value/>
          <is_null_allowed>true</is_null_allowed>
        </field>
        <field id="att_title" xsi:type="AttributeTemplateString">
          <sql>att_title</sql>
          <default_value/>
          <is_null_allowed>true</is_null_allowed>
        </field>
        <field id="att_title_link" xsi:type="AttributeOQL">
          <sql>att_title_link</sql>
          <default_value/>
          <is_null_allowed>true</is_null_allowed>
        </field>
        <field id="att_color" xsi:type="AttributeString">
          <sql>att_color</sql>
          <default_value/>
          <is_null_allowed>true</is_null_allowed>
          <validation_pattern>^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$</validation_pattern>
        </field>
        <field id="att_text" xsi:type="AttributeTemplateHTML">
          <sql>att_text</sql>
          <default_value/>
          <is_null_allowed>true</is_null_allowed>
        </field>
        <field id="include_delete_button" xsi:type="AttributeEnum">
          <values>
            <value id="yes">yes</value>
            <value id="no">no</value>
          </values>
          <sql>include_delete_button</sql>
          <default_value>no</default_value>
          <is_null_allowed>false</is_null_allowed>
          <display_style>radio_horizontal</display_style>
        </field>
        <field id="include_modify_button" xsi:type="AttributeEnum">
          <values>
            <value id="yes">yes</value>
            <value id="no">no</value>
          </values>
          <sql>include_modify_button</sql>
          <default_value>no</default_value>
          <is_null_allowed>false</is_null_allowed>
          <display_style>radio_horizontal</display_style>
        </field>
        <field id="include_otheraction_buttons" xsi:type="AttributeEnum">
          <values>
            <value id="yes">yes</value>
            <value id="no">no</value>
            <value id="specific">specific</value>
          </values>
          <sql>include_otheraction_buttons</sql>
          <default_value>no</default_value>
          <is_null_allowed>false</is_null_allowed>
          <display_style>radio_horizontal</display_style>
        </field>
        <field id="specific_action_buttons" xsi:type="AttributeTemplateString">
          <sql>specific_action_buttons</sql>
          <default_value/>
          <is_null_allowed>true</is_null_allowed>
        </field>
        <field id="include_list_view" xsi:type="AttributeEnum">
          <values>
            <value id="yes">yes</value>
            <value id="no">no</value>
          </values>
          <sql>include_list_view</sql>
          <default_value>no</default_value>
          <is_null_allowed>false</is_null_allowed>
          <display_style>radio_horizontal</display_style>
        </field>
        <field id="include_userinfo" xsi:type="AttributeEnum">
          <values>
            <value id="yes">yes</value>
            <value id="no">no</value>
          </values>
          <sql>include_userinfo</sql>
          <default_value>no</default_value>
          <is_null_allowed>false</is_null_allowed>
          <display_style>radio_horizontal</display_style>
        </field>
        <field id="language" xsi:type="AttributeApplicationLanguage">
          <sql>language</sql>
          <is_null_allowed>false</is_null_allowed>
          <default_value>EN US</default_value>
        </field>
      </fields>
      <methods>
      </methods>
      <presentation>
        <details>
          <items>
            <item id="trigger_list">
              <rank>10</rank>
            </item>
            <item id="col:col1">
              <rank>20</rank>
              <items>
                <item id="fieldset:ActionWebhookNotification:baseinfo">
                  <rank>10</rank>
                  <items>
                    <item id="name">
                      <rank>10</rank>
                    </item>
                    <item id="description">
                      <rank>20</rank>
                    </item>
                    <item id="status">
                      <rank>30</rank>
                    </item>
                  </items>
                </item>
                <item id="fieldset:ActionWebhookNotification:urlinfo">
                  <rank>20</rank>
                  <items>
                    <item id="webrequest_url">
                      <rank>10</rank>
                    </item>
                    <item id="channel">
                      <rank>20</rank>
                    </item>
                    <item id="bot_alias">
                      <rank>30</rank>
                    </item>
                  </items>
                </item>
                <item id="fieldset:ActionWebhookNotification:standard">
                  <rank>30</rank>
                  <items>
                    <item id="text">
                      <rank>10</rank>
                    </item>
                  </items>
                </item>
              </items>
            </item>
            <item id="col:col2">
              <rank>30</rank>
              <items>
                <item id="fieldset:ActionWebhookNotification:additional_fields">
                  <rank>10</rank>
                  <items>
                    <item id="include_list_view">
                      <rank>10</rank>
                    </item>
                    <item id="include_modify_button">
                      <rank>20</rank>
                    </item>
                    <item id="include_delete_button">
                      <rank>30</rank>
                    </item>
                    <item id="include_otheraction_buttons">
                      <rank>40</rank>
                    </item>
                    <item id="specific_action_buttons">
                      <rank>50</rank>
                    </item>
                  </items>
                </item>
                <item id="fieldset:ActionWebhookNotification:attachment">
                  <rank>20</rank>
                  <items>
                    <item id="attachment">
                      <rank>10</rank>
                    </item>
                    <item id="att_title">
                      <rank>20</rank>
                    </item>
                    <item id="att_title_link">
                      <rank>30</rank>
                    </item>
                    <item id="att_color">
                      <rank>40</rank>
                    </item>
                    <item id="att_text">
                      <rank>50</rank>
                    </item>
                    <item id="att_fallback">
                      <rank>60</rank>
                    </item>
                  </items>
                </item>
              </items>
            </item>
          </items>
        </details>
        <list>
          <items>
            <item id="name">
              <rank>10</rank>
            </item>
            <item id="status">
              <rank>20</rank>
            </item>
            <item id="webrequest_url">
              <rank>30</rank>
            </item>
            <item id="channel">
              <rank>40</rank>
            </item>
            <item id="bot_alias">
              <rank>50</rank>
            </item>
            <item id="finalclass">
              <rank>60</rank>
            </item>
          </items>
        </list>
        <search>
          <items>
            <item id="name">
              <rank>10</rank>
            </item>
            <item id="status">
              <rank>20</rank>
            </item>
            <item id="webrequest_url">
              <rank>30</rank>
            </item>
            <item id="channel">
              <rank>40</rank>
            </item>
            <item id="bot_alias">
              <rank>50</rank>
            </item>
            <item id="finalclass">
              <rank>60</rank>
            </item>
          </items>
        </search>
      </presentation>
    </class>
    <class id="ActionSlackNotification" _delta="define">
      <parent>ActionWebhookNotification</parent>
      <properties>
        <comment></comment>
        <category>grant_by_profile,core/cmdb,application</category>
        <abstract>false</abstract>
        <key_type>autoincrement</key_type>
        <db_table>priv_salck_notification</db_table>
        <db_key_field>id</db_key_field>
        <naming>
          <attributes>
            <attribute id="name"/>
          </attributes>
        </naming>
        <display_template/>
        <icon/>
        <reconciliation>
          <attributes>
            <attribute id="name"/>
          </attributes>
        </reconciliation>
      </properties>
      <fields></fields>
      <methods>
        <method id="preparePostData">
          <static>false</static>
          <access>protected</access>
          <type>Custom</type>
          <code><![CDATA[	protected function preparePostData($aContextArgs, &$oLog)
  {
    // Set User Language for Notification
    $sUserLang = Dict::GetUserLanguage();
    Dict::SetUserLanguage($this->Get("language"));

    $sText = empty($this->Get("text")) ? "" : $this->prepareTextForSlack(MetaModel::ApplyParams($this->Get("text"), $aContextArgs));
    $aSlackData = array(
      'text' => $sText,
      'blocks' => array(
        array(
          'type' => 'section',
          'text' => array(
            'type' => 'mrkdwn',
            'text' => $sText,
          ),
        ),
      ),
    );

    if (!empty($this->Get('channel'))) {
      $aSlackData['channel'] = $this->Get('channel');
    }
    if (!empty($this->Get('bot_alias'))) {
      $aSlackData['username'] = $this->Get('bot_alias');
    }

    // Fields from list view
    if ($aFields = $this->GetListViewAttributes($aContextArgs)) {
      $aSlackData['blocks'][] = array(
        'type' => 'section',
        'fields' => $aFields,
      );
    }


    if ($this->Get('include_userinfo') == 'yes') {
      /**
       * Add user info
       * @var User $oUser
       */
      $oUser = UserRights::GetUserObject();
      $oContact = $oUser->GetContactObject() ?: $oUser;
      $sContactUrl = ApplicationContext::MakeObjectUrl(get_class($oContact), $oContact->GetKey(), null, false);

      $aSlackData['blocks'][] = array(
        'type' => 'context',
        'elements' => array(
          array(
            'type' => 'mrkdwn',
            'text' => sprintf('*User*: <%s|%s>', $sContactUrl, $oUser->GetFriendlyName()),
          ),
        ),
      );
    }

    // Actions
    if ($aActions = $this->GetActions($aContextArgs)) {
      $aSlackData['blocks'][] = array(
        'type' => 'actions',
        'elements' => $aActions,
      );
    }

    // Attachments
    if ($aAttachments = $this->GetAttachments($aContextArgs)) {
      $aSlackData['attachments'] = $aAttachments;
    }

    $oLog->Set('content', "POST Data: \n" . print_r($aSlackData, true));

    // Reset User Language
    Dict::SetUserLanguage($sUserLang);
    return $aSlackData;
  }]]></code>
        </method>
        <method id="prepareTextForSlack">
          <static>false</static>
          <access>private</access>
          <type>Custom</type>
          <code><![CDATA[private function prepareTextForSlack($sText)
          {
            //convert html to slack markdown
            if(!empty($sText)){
                  $sText = strip_tags($sText, '<h1><h2><h3><br><strong><b><em><i><var><cite><del><s><q><li><tt><code><kbd><samp><pre><a>');
                  $sText = preg_replace('/<([b-z][a-z0-9]*)[^>]*?(?:\/?)>/', '<$1>', $sText);
                  $sText = str_replace(array('<br />', '<br>'), "\n", $sText);
                  $sText = str_replace(array('<h1>', '</h1>'), array('*', '*'), $sText);
                  $sText = str_replace(array('<h2>', '</h2>'), array('*', '*'), $sText);
                  $sText = str_replace(array('<h3>', '</h3>'), array('*', '*'), $sText);
                  $sText = str_replace(array('<strong>', '</strong>'), array('*', '*'), $sText);
                  $sText = str_replace(array('<b>', '</b>'), array('*', '*'), $sText);
                  $sText = str_replace(array('<em>', '</em>'), array('_', '_'), $sText);
                  $sText = str_replace(array('<i>', '</i>'), array('_', '_'), $sText);
                  $sText = str_replace(array('<var>', '</var>'), array('_', '_'), $sText);
                  $sText = str_replace(array('<cite>', '</cite>'), array('_', '_'), $sText);
                  $sText = str_replace(array('<del>', '</del>'), array('~', '~'), $sText);
                  $sText = str_replace(array('<s>', '</s>'), array('~', '~'), $sText);
                  $sText = str_replace(array('<q>', '</q>'), array('"', '"'), $sText);
                  $sText = str_replace(array('<li>', '</li>'), array('• ', ''), $sText);
                  $sText = str_replace(array('<tt>', '</tt>'), array('`', '`'), $sText);
                  $sText = str_replace(array('<code>', '</code>'), array('`', '`'), $sText);
                  $sText = str_replace(array('<kbd>', '</kbd>'), array('`', '`'), $sText);
                  $sText = str_replace(array('<samp>', '</samp>'), array('`', '`'), $sText);
                  $sText = str_replace(array('<pre>', '</pre>'), array('```', '```'), $sText);
                  $sText = str_replace(array('```'.PHP_EOL.'`', '````'), array('```', '```'), $sText);

                  preg_match_all('/<\s*a.*?href\s*=\s*(?:\"|\')(.*?)(?:\"|\')[^>]*>(.*?)<\s*?\/\s*?a\s*?>/i', $sText, $res);
                  for($i = 0; $i < count($res[0]); $i++) {
                      $sText = str_replace($res[0][$i], '<'.$res[1][$i].'|'.$res[2][$i].'>', $sText);
                  }
              }
            return $sText;
          }
          ]]></code>
        </method>
        <method id="GetActions">
          <static>false</static>
          <access>protected</access>
          <type>Custom</type>
          <code><![CDATA[	protected function GetActions($aContextArgs)
	{
		$aActionElements = array();
		/** @var cmdbAbstractObject $oObj */
		$oObj = $aContextArgs['this->object()'];
		$sClass = get_class($oObj);
		$iKey = $oObj->GetKey();
		$sPage = DBObject::ComputeStandardUIPage($sClass);
		$sAbsoluteUrl = utils::GetAbsoluteUrlAppRoot();

		if ($this->Get('include_modify_button') == 'yes') 
    {
			$aActionElements[] = array(
				'type' => 'button',
				'text' => array(
					'type' => 'plain_text',
					'text' => Dict::S('UI:Menu:Modify'),
				),
				'action_id' => 'modify',
				'url' => sprintf('%spages/%s?operation=modify&class=%s&id=%d', $sAbsoluteUrl, $sPage, $sClass, $iKey),
				'style' => 'primary',
			);
		}

		if ($this->Get('include_otheraction_buttons') != 'no')
		{
			$aTransitions = $oObj->EnumTransitions();
			$aStimuli = MetaModel::EnumStimuli($sClass);
			if ($this->Get('include_otheraction_buttons') == 'yes')
			{
				$aAllowedStimuli = array_keys($aTransitions);
			}
			else
			{
				$aAllowedStimuli = preg_split('/\s*,\s*/', $this->Get('specific_action_buttons'));
			}

			foreach ($aAllowedStimuli as $sStimulusCode)
			{
				if (isset($aTransitions[$sStimulusCode]) && is_a($aStimuli[$sStimulusCode], StimulusUserAction::class))
				{
					$aActionElements[] = array(
						'type' => 'button',
						'text' => array(
							'type' => 'plain_text',
							'text' => $aStimuli[$sStimulusCode]->GetLabel(),
						),
						'action_id' => $sStimulusCode,
						'url' => sprintf('%spages/%s?operation=stimulus&stimulus=%s&class=%s&id=%d', $sAbsoluteUrl, $sPage, $sStimulusCode, $sClass, $iKey),
					);
				}
			}
		}

		if ($this->Get('include_delete_button') == 'yes') 
    {
			$aActionElements[] = array(
				'type' => 'button',
				'text' => array(
					'type' => 'plain_text',
					'text' => Dict::S('UI:Menu:Delete'),
				),
				'action_id' => 'delete',
				'url' => sprintf('%spages/%s?operation=delete&class=%s&id=%d', $sAbsoluteUrl, $sPage, $sClass, $iKey),
				'style' => 'danger',
			);
		}

		return $aActionElements;
	}]]></code>
        </method>
        <method id="GetListViewAttributes">
          <static>false</static>
          <access>protected</access>
          <type>Custom</type>
          <code><![CDATA[	protected function GetListViewAttributes($aContextArgs)
	{
		if ($this->Get('include_list_view') == 'no') return;
		$aFields = array();

		/** @var CMDBObject $oObj */
		$oObj = $aContextArgs['this->object()'];
		$sClass = get_class($oObj);

		$aListItems = MetaModel::GetZListItems($sClass, 'slack');
		if (empty($aListItems)) $aListItems = MetaModel::GetZListItems($sClass, 'list');

		foreach($aListItems as $sAttCode)
		{
			$oAttDef = MetaModel::GetAttributeDef($sClass, $sAttCode);
			$aFields[] = array(
				'type' => 'mrkdwn',
				'text' => sprintf("*%s*\n%s", $oAttDef->GetLabel(), $this->prepareTextForSlack($oObj->GetAsHtml($sAttCode))),
			);
		}

		return $aFields;
	}]]></code>
        </method>
        <method id="GetAttachments">
          <static>false</static>
          <access>private</access>
          <type>Custom</type>
          <code><![CDATA[ private function GetAttachments($aContextArgs)
  {
    if (!empty($this->Get('attachment')) && $this->Get('attachment') == 'yes'){
      $aAttachment = array();
      if (!empty($this->Get("att_title"))){
        $aAttachment['title'] = MetaModel::ApplyParams($this->Get("att_title"), $aContextArgs);
      }
      if (($sLink = $this->GetObjectLink('att_title_link', $aContextArgs)) && !empty($sLink)){
        $aAttachment['title_link'] = $sLink;
      }
      if (!empty($this->Get('att_color'))){
        $aAttachment['color'] = $this->Get('att_color');
      }
      if (!empty($this->Get("att_text"))){
        $aAttachment['text'] = $this->prepareTextForSlack(MetaModel::ApplyParams($this->Get("att_text"), $aContextArgs));
        $aAttachment['mrkdwn_in'] = array("text");
      }
      if (!empty($this->Get("att_fallback"))){
        $aAttachment['fallback'] = $this->prepareTextForSlack(MetaModel::ApplyParams($this->Get("att_fallback"), $aContextArgs));
      }
      return array(
        0 => $aAttachment
      );
    }
    return false;
  }]]></code>
        </method>
      </methods>
      <presentation>
        <details>
          <items>
            <item id="trigger_list">
              <rank>10</rank>
            </item>
            <item id="col:col1">
              <rank>20</rank>
              <items>
                <item id="fieldset:ActionWebhookNotification:baseinfo">
                  <rank>10</rank>
                  <items>
                    <item id="name">
                      <rank>10</rank>
                    </item>
                    <item id="description">
                      <rank>20</rank>
                    </item>
                    <item id="status">
                      <rank>30</rank>
                    </item>
                    <item id="language">
                      <rank>40</rank>
                    </item>
                  </items>
                </item>
                <item id="fieldset:ActionWebhookNotification:urlinfo">
                  <rank>20</rank>
                  <items>
                    <item id="webrequest_url">
                      <rank>10</rank>
                    </item>
                    <item id="channel">
                      <rank>20</rank>
                    </item>
                    <item id="bot_alias">
                      <rank>30</rank>
                    </item>
                  </items>
                </item>
                <item id="fieldset:ActionWebhookNotification:standard">
                  <rank>30</rank>
                  <items>
                    <item id="text">
                      <rank>10</rank>
                    </item>
                  </items>
                </item>
              </items>
            </item>
            <item id="col:col2">
              <rank>30</rank>
              <items>
                <item id="fieldset:ActionWebhookNotification:additional_fields">
                  <rank>10</rank>
                  <items>
                    <item id="include_list_view">
                      <rank>10</rank>
                    </item>
                    <item id="include_modify_button">
                      <rank>20</rank>
                    </item>
                    <item id="include_delete_button">
                      <rank>30</rank>
                    </item>
                    <item id="include_otheraction_buttons">
                      <rank>40</rank>
                    </item>
                    <item id="specific_action_buttons">
                      <rank>50</rank>
                    </item>
                    <item id="include_userinfo">
                      <rank>60</rank>
                    </item>
                  </items>
                </item>
                <item id="fieldset:ActionSlackNotification:attachment">
                  <rank>20</rank>
                  <items>
                    <item id="attachment">
                      <rank>10</rank>
                    </item>
                    <item id="att_title">
                      <rank>20</rank>
                    </item>
                    <item id="att_title_link">
                      <rank>30</rank>
                    </item>
                    <item id="att_color">
                      <rank>40</rank>
                    </item>
                    <item id="att_text">
                      <rank>50</rank>
                    </item>
                    <item id="att_fallback">
                      <rank>60</rank>
                    </item>
                  </items>
                </item>
              </items>
            </item>
          </items>
        </details>
        <list>
          <items>
            <item id="name">
              <rank>10</rank>
            </item>
            <item id="status">
              <rank>20</rank>
            </item>
            <item id="webrequest_url">
              <rank>30</rank>
            </item>
            <item id="channel">
              <rank>40</rank>
            </item>
            <item id="bot_alias">
              <rank>50</rank>
            </item>
          </items>
        </list>
        <search>
          <items>
            <item id="name">
              <rank>10</rank>
            </item>
            <item id="status">
              <rank>20</rank>
            </item>
            <item id="webrequest_url">
              <rank>30</rank>
            </item>
            <item id="channel">
              <rank>40</rank>
            </item>
            <item id="bot_alias">
              <rank>50</rank>
            </item>
          </items>
        </search>
      </presentation>
    </class>
    <class id="ActionRocketChatNotification" _delta="define">
      <parent>ActionWebhookNotification</parent>
      <properties>
        <comment></comment>
        <category>grant_by_profile,core/cmdb,application</category>
        <abstract>false</abstract>
        <key_type>autoincrement</key_type>
        <db_table>priv_rocket_notification</db_table>
        <db_key_field>id</db_key_field>
        <naming>
          <attributes>
            <attribute id="name"/>
          </attributes>
        </naming>
        <display_template/>
        <icon/>
        <reconciliation>
          <attributes>
            <attribute id="name"/>
          </attributes>
        </reconciliation>
      </properties>
      <fields></fields>
      <methods>
        <method id="preparePostData">
          <static>false</static>
          <access>protected</access>
          <type>Custom</type>
          <code><![CDATA[ protected function preparePostData($aContextArgs, &$oLog)
  {
    // Set User Language for Notification
    $sUserLang = Dict::GetUserLanguage();
    Dict::SetUserLanguage($this->Get("language"));

    $aPostParams_raw = parent::preparePostData($aContextArgs, $oLog);
    $rocketData = array();

    if (isset ( $aPostParams_raw['sText'] ))
    {
      $aPostParams_raw['sText'] = $this->prepareTextForRocket($aPostParams_raw['sText']);
      $rocketData['text'] = $aPostParams_raw['sText'];
    }
    if (isset ( $aPostParams_raw['sWebhookChannel'] )){
      $rocketData['channel'] = $aPostParams_raw['sWebhookChannel'];
    }
    if (isset ( $aPostParams_raw['sBotAlias'] )){
      $rocketData['username'] = $aPostParams_raw['sBotAlias'];
    }

    // Fields from list view
    if ($aFields = $this->GetListViewAttributes($aContextArgs)) {
      $rocketData['attachments'][] = array(
        'fields' => $aFields,
      );
    }

    if (isset ( $aPostParams_raw['sSendAttachment'] ) 
      && ($aPostParams_raw['sSendAttachment'] === 'yes' || $aPostParams_raw['sSendAttachment'] === 'Ja'))
    {
      $att_params = array();
      if (isset ( $aPostParams_raw['sAttTitle'] ))
      {
        $att_params['title'] = $aPostParams_raw['sAttTitle'];
      }
      if (isset ( $aPostParams_raw['sAttTitleLink'] ))
      {
        $att_params['title_link'] = $aPostParams_raw['sAttTitleLink'];
      }
      if (isset ( $aPostParams_raw['sAttColor'] ))
      {
        $att_params['color'] = $aPostParams_raw['sAttColor'];
      }
      if (isset ( $aPostParams_raw['sAttText'] ))
      {
        $aPostParams_raw['sAttText'] = $this->prepareTextForRocket($aPostParams_raw['sAttText']);
        $att_params['text'] = $aPostParams_raw['sAttText'];
        //$att_params['mrkdwn_in'] = array("text");
      }
      if (isset ( $aPostParams_raw['sAttFallback'] ))
      {
        $aPostParams_raw['sAttFallback'] = $this->prepareTextForRocket($aPostParams_raw['sAttFallback']);
        $att_params['fallback'] = $aPostParams_raw['sAttFallback'];
      }
      $rocketData['attachments'][] = $att_params;
    }
    if ($this->Get('include_userinfo') == 'yes')
    {
      /** @var User $oUser */
      $oUser = UserRights::GetUserObject();
      $oContact = $oUser->GetContactObject() ?: $oUser;
      $rocketData['attachments'][] = array(
        'author_name' => $oUser->GetFriendlyName(),
        'author_link' => ApplicationContext::MakeObjectUrl(get_class($oContact), $oContact->GetKey(), null, false),
        'author_icon' => $oContact->GetIcon(false),
        'ts'          => date(DATE_W3C),
     );
    }

    $oLog->Set ( 'content', "POST Data: \n" . print_r($rocketData,true) );
    // Reset User Language
    Dict::SetUserLanguage($sUserLang);

    return $rocketData;
  }]]></code>
        </method>
        <method id="GetListViewAttributes">
          <static>false</static>
          <access>protected</access>
          <type>Custom</type>
          <code><![CDATA[	protected function GetListViewAttributes($aContextArgs)
  {
    if ($this->Get('include_list_view') == 'no') return;
    $aFields = array();

    /** @var CMDBObject $oObj */
    $oObj = $aContextArgs['this->object()'];
    $sClass = get_class($oObj);

    $aListItems = MetaModel::GetZListItems($sClass, 'rocket.chat');
    if (empty($aListItems)) $aListItems = MetaModel::GetZListItems($sClass, 'list');

    foreach($aListItems as $sAttCode)
    {
      $oAttDef = MetaModel::GetAttributeDef($sClass, $sAttCode);
      $aFields[] = array(
        'short' => true,
        'title' => $oAttDef->GetLabel(),
        'value' => $this->prepareTextForRocket($oObj->GetAsHtml($sAttCode)),
      );
    }

    return $aFields;
  }]]></code>
        </method>
        <method id="prepareTextForRocket">
          <static>false</static>
          <access>private</access>
          <type>Custom</type>
          <code><![CDATA[private function prepareTextForRocket($sText)
  {
    //convert html to rocket markdown
    if(!empty($sText)){
      $sText = strip_tags($sText, '<h1><h2><h3><br><strong><b><em><i><del><s><li><code><pre><a>');
      $sText = str_replace(array('<br />', '<br>'), "\n", $sText);
      $sText = str_replace(array('<h1>', '</h1>'), array('**', '**'), $sText);
      $sText = str_replace(array('<h2>', '</h2>'), array('**', '**'), $sText);
      $sText = str_replace(array('<h3>', '</h3>'), array('**', '**'), $sText);
      $sText = str_replace(array('<strong>', '</strong>'), array('*', '*'), $sText);
      $sText = str_replace(array('<b>', '</b>'), array('*', '*'), $sText);
      $sText = str_replace(array('<em>', '</em>'), array('_', '_'), $sText);
      $sText = str_replace(array('<i>', '</i>'), array('_', '_'), $sText);
      $sText = str_replace(array('<del>', '</del>'), array('~', '~'), $sText);
      $sText = str_replace(array('<s>', '</s>'), array('~', '~'), $sText);
      $sText = str_replace(array('<li>', '</li>'), array('• ', ''), $sText);
      $sText = str_replace(array('<code>', '</code>'), array('`', '`'), $sText);
      $sText = str_replace(array('<pre>', '</pre>'), array('```', '```'), $sText);

      preg_match_all('/<\s*a.*?href\s*=\s*(?:\"|\')(.*?)(?:\"|\')[^>]*>(.*?)<\s*?\/\s*?a\s*?>/i', $sText, $res);
      for($i = 0; $i < count($res[0]); $i++) {
          $sText = str_replace($res[0][$i], '['.$res[2][$i].']('.$res[1][$i].')', $sText);
      }
    }
    return $sText;
  }]]></code>
        </method>
      </methods>
      <presentation>
        <details>
          <items>
            <item id="trigger_list">
              <rank>10</rank>
            </item>
            <item id="col:col1">
              <rank>20</rank>
              <items>
                <item id="fieldset:ActionWebhookNotification:baseinfo">
                  <rank>10</rank>
                  <items>
                    <item id="name">
                      <rank>10</rank>
                    </item>
                    <item id="description">
                      <rank>20</rank>
                    </item>
                    <item id="status">
                      <rank>30</rank>
                    </item>
                    <item id="language">
                      <rank>40</rank>
                    </item>
                  </items>
                </item>
                <item id="fieldset:ActionWebhookNotification:urlinfo">
                  <rank>20</rank>
                  <items>
                    <item id="webrequest_url">
                      <rank>10</rank>
                    </item>
                    <item id="channel">
                      <rank>20</rank>
                    </item>
                    <item id="bot_alias">
                      <rank>30</rank>
                    </item>
                  </items>
                </item>
                <item id="fieldset:ActionWebhookNotification:standard">
                  <rank>30</rank>
                  <items>
                    <item id="text">
                      <rank>10</rank>
                    </item>
                  </items>
                </item>
              </items>
            </item>
            <item id="col:col2">
              <rank>30</rank>
              <items>
                <item id="fieldset:ActionWebhookNotification:additional_fields">
                  <rank>10</rank>
                  <items>
                    <item id="include_list_view">
                      <rank>10</rank>
                    </item>
                    <item id="include_userinfo">
                      <rank>20</rank>
                    </item>
                  </items>
                </item>
                <item id="fieldset:ActionWebhookNotification:attachment">
                  <rank>20</rank>
                  <items>
                    <item id="attachment">
                      <rank>10</rank>
                    </item>
                    <item id="att_title">
                      <rank>20</rank>
                    </item>
                    <item id="att_title_link">
                      <rank>30</rank>
                    </item>
                    <item id="att_color">
                      <rank>40</rank>
                    </item>
                    <item id="att_text">
                      <rank>50</rank>
                    </item>
                    <item id="att_fallback">
                      <rank>60</rank>
                    </item>
                  </items>
                </item>
              </items>
            </item>
          </items>
        </details>
        <list>
          <items>
            <item id="name">
              <rank>10</rank>
            </item>
            <item id="status">
              <rank>20</rank>
            </item>
            <item id="webrequest_url">
              <rank>30</rank>
            </item>
            <item id="channel">
              <rank>40</rank>
            </item>
            <item id="bot_alias">
              <rank>50</rank>
            </item>
          </items>
        </list>
        <search>
          <items>
            <item id="name">
              <rank>10</rank>
            </item>
            <item id="status">
              <rank>20</rank>
            </item>
            <item id="webrequest_url">
              <rank>30</rank>
            </item>
            <item id="channel">
              <rank>40</rank>
            </item>
            <item id="bot_alias">
              <rank>50</rank>
            </item>
          </items>
        </search>
      </presentation>
    </class>
  </classes>
  <menus></menus>
  <user_rights>
    <groups>
    </groups>
    <profiles>
    </profiles>
  </user_rights>
</itop_design>
